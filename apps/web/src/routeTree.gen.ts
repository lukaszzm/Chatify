/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as DashboardRouteImport } from "./routes/_dashboard/route";
import { Route as AuthRouteImport } from "./routes/_auth/route";
import { Route as IndexImport } from "./routes/index";
import { Route as DashboardSettingsRouteImport } from "./routes/_dashboard/settings/route";
import { Route as DashboardNotesRouteImport } from "./routes/_dashboard/notes/route";
import { Route as DashboardChatRouteImport } from "./routes/_dashboard/chat/route";
import { Route as AuthSignUpRouteImport } from "./routes/_auth/sign-up/route";
import { Route as AuthSignInRouteImport } from "./routes/_auth/sign-in/route";
import { Route as DashboardSettingsProfileRouteImport } from "./routes/_dashboard/settings/profile/route";
import { Route as DashboardSettingsNotificationsRouteImport } from "./routes/_dashboard/settings/notifications/route";
import { Route as DashboardSettingsAppearanceRouteImport } from "./routes/_dashboard/settings/appearance/route";
import { Route as DashboardNotesNoteIdRouteImport } from "./routes/_dashboard/notes/$noteId/route";
import { Route as DashboardChatChatIdRouteImport } from "./routes/_dashboard/chat/$chatId/route";
import { Route as DashboardSettingsIndexRouteImport } from "./routes/_dashboard/settings/index/route";
import { Route as DashboardNotesIndexRouteImport } from "./routes/_dashboard/notes/index/route";
import { Route as DashboardChatIndexRouteImport } from "./routes/_dashboard/chat/index/route";

// Create/Update Routes

const DashboardRouteRoute = DashboardRouteImport.update({
  id: "/_dashboard",
  getParentRoute: () => rootRoute,
} as any);

const AuthRouteRoute = AuthRouteImport.update({
  id: "/_auth",
  getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
  path: "/",
  getParentRoute: () => rootRoute,
} as any);

const DashboardSettingsRouteRoute = DashboardSettingsRouteImport.update({
  path: "/settings",
  getParentRoute: () => DashboardRouteRoute,
} as any);

const DashboardNotesRouteRoute = DashboardNotesRouteImport.update({
  path: "/notes",
  getParentRoute: () => DashboardRouteRoute,
} as any);

const DashboardChatRouteRoute = DashboardChatRouteImport.update({
  path: "/chat",
  getParentRoute: () => DashboardRouteRoute,
} as any);

const AuthSignUpRouteRoute = AuthSignUpRouteImport.update({
  path: "/sign-up",
  getParentRoute: () => AuthRouteRoute,
} as any);

const AuthSignInRouteRoute = AuthSignInRouteImport.update({
  path: "/sign-in",
  getParentRoute: () => AuthRouteRoute,
} as any);

const DashboardSettingsProfileRouteRoute = DashboardSettingsProfileRouteImport.update({
  path: "/profile",
  getParentRoute: () => DashboardSettingsRouteRoute,
} as any);

const DashboardSettingsNotificationsRouteRoute =
  DashboardSettingsNotificationsRouteImport.update({
    path: "/notifications",
    getParentRoute: () => DashboardSettingsRouteRoute,
  } as any);

const DashboardSettingsAppearanceRouteRoute =
  DashboardSettingsAppearanceRouteImport.update({
    path: "/appearance",
    getParentRoute: () => DashboardSettingsRouteRoute,
  } as any);

const DashboardNotesNoteIdRouteRoute = DashboardNotesNoteIdRouteImport.update({
  path: "/$noteId",
  getParentRoute: () => DashboardNotesRouteRoute,
} as any);

const DashboardChatChatIdRouteRoute = DashboardChatChatIdRouteImport.update({
  path: "/$chatId",
  getParentRoute: () => DashboardChatRouteRoute,
} as any);

const DashboardSettingsIndexRouteRoute = DashboardSettingsIndexRouteImport.update({
  path: "/",
  getParentRoute: () => DashboardSettingsRouteRoute,
} as any);

const DashboardNotesIndexRouteRoute = DashboardNotesIndexRouteImport.update({
  path: "/",
  getParentRoute: () => DashboardNotesRouteRoute,
} as any);

const DashboardChatIndexRouteRoute = DashboardChatIndexRouteImport.update({
  path: "/",
  getParentRoute: () => DashboardChatRouteRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    "/_auth": {
      id: "/_auth";
      path: "";
      fullPath: "";
      preLoaderRoute: typeof AuthRouteImport;
      parentRoute: typeof rootRoute;
    };
    "/_dashboard": {
      id: "/_dashboard";
      path: "";
      fullPath: "";
      preLoaderRoute: typeof DashboardRouteImport;
      parentRoute: typeof rootRoute;
    };
    "/_auth/sign-in": {
      id: "/_auth/sign-in";
      path: "/sign-in";
      fullPath: "/sign-in";
      preLoaderRoute: typeof AuthSignInRouteImport;
      parentRoute: typeof AuthRouteImport;
    };
    "/_auth/sign-up": {
      id: "/_auth/sign-up";
      path: "/sign-up";
      fullPath: "/sign-up";
      preLoaderRoute: typeof AuthSignUpRouteImport;
      parentRoute: typeof AuthRouteImport;
    };
    "/_dashboard/chat": {
      id: "/_dashboard/chat";
      path: "/chat";
      fullPath: "/chat";
      preLoaderRoute: typeof DashboardChatRouteImport;
      parentRoute: typeof DashboardRouteImport;
    };
    "/_dashboard/notes": {
      id: "/_dashboard/notes";
      path: "/notes";
      fullPath: "/notes";
      preLoaderRoute: typeof DashboardNotesRouteImport;
      parentRoute: typeof DashboardRouteImport;
    };
    "/_dashboard/settings": {
      id: "/_dashboard/settings";
      path: "/settings";
      fullPath: "/settings";
      preLoaderRoute: typeof DashboardSettingsRouteImport;
      parentRoute: typeof DashboardRouteImport;
    };
    "/_dashboard/chat/": {
      id: "/_dashboard/chat/";
      path: "/";
      fullPath: "/chat/";
      preLoaderRoute: typeof DashboardChatIndexRouteImport;
      parentRoute: typeof DashboardChatRouteImport;
    };
    "/_dashboard/notes/": {
      id: "/_dashboard/notes/";
      path: "/";
      fullPath: "/notes/";
      preLoaderRoute: typeof DashboardNotesIndexRouteImport;
      parentRoute: typeof DashboardNotesRouteImport;
    };
    "/_dashboard/settings/": {
      id: "/_dashboard/settings/";
      path: "/";
      fullPath: "/settings/";
      preLoaderRoute: typeof DashboardSettingsIndexRouteImport;
      parentRoute: typeof DashboardSettingsRouteImport;
    };
    "/_dashboard/chat/$chatId": {
      id: "/_dashboard/chat/$chatId";
      path: "/$chatId";
      fullPath: "/chat/$chatId";
      preLoaderRoute: typeof DashboardChatChatIdRouteImport;
      parentRoute: typeof DashboardChatRouteImport;
    };
    "/_dashboard/notes/$noteId": {
      id: "/_dashboard/notes/$noteId";
      path: "/$noteId";
      fullPath: "/notes/$noteId";
      preLoaderRoute: typeof DashboardNotesNoteIdRouteImport;
      parentRoute: typeof DashboardNotesRouteImport;
    };
    "/_dashboard/settings/appearance": {
      id: "/_dashboard/settings/appearance";
      path: "/appearance";
      fullPath: "/settings/appearance";
      preLoaderRoute: typeof DashboardSettingsAppearanceRouteImport;
      parentRoute: typeof DashboardSettingsRouteImport;
    };
    "/_dashboard/settings/notifications": {
      id: "/_dashboard/settings/notifications";
      path: "/notifications";
      fullPath: "/settings/notifications";
      preLoaderRoute: typeof DashboardSettingsNotificationsRouteImport;
      parentRoute: typeof DashboardSettingsRouteImport;
    };
    "/_dashboard/settings/profile": {
      id: "/_dashboard/settings/profile";
      path: "/profile";
      fullPath: "/settings/profile";
      preLoaderRoute: typeof DashboardSettingsProfileRouteImport;
      parentRoute: typeof DashboardSettingsRouteImport;
    };
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AuthRouteRoute: AuthRouteRoute.addChildren({
    AuthSignInRouteRoute,
    AuthSignUpRouteRoute,
  }),
  DashboardRouteRoute: DashboardRouteRoute.addChildren({
    DashboardChatRouteRoute: DashboardChatRouteRoute.addChildren({
      DashboardChatIndexRouteRoute,
      DashboardChatChatIdRouteRoute,
    }),
    DashboardNotesRouteRoute: DashboardNotesRouteRoute.addChildren({
      DashboardNotesIndexRouteRoute,
      DashboardNotesNoteIdRouteRoute,
    }),
    DashboardSettingsRouteRoute: DashboardSettingsRouteRoute.addChildren({
      DashboardSettingsIndexRouteRoute,
      DashboardSettingsAppearanceRouteRoute,
      DashboardSettingsNotificationsRouteRoute,
      DashboardSettingsProfileRouteRoute,
    }),
  }),
});

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/_dashboard"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth/route.tsx",
      "children": [
        "/_auth/sign-in",
        "/_auth/sign-up"
      ]
    },
    "/_dashboard": {
      "filePath": "_dashboard/route.tsx",
      "children": [
        "/_dashboard/chat",
        "/_dashboard/notes",
        "/_dashboard/settings"
      ]
    },
    "/_auth/sign-in": {
      "filePath": "_auth/sign-in/route.tsx",
      "parent": "/_auth"
    },
    "/_auth/sign-up": {
      "filePath": "_auth/sign-up/route.tsx",
      "parent": "/_auth"
    },
    "/_dashboard/chat": {
      "filePath": "_dashboard/chat/route.tsx",
      "parent": "/_dashboard",
      "children": [
        "/_dashboard/chat/",
        "/_dashboard/chat/$chatId"
      ]
    },
    "/_dashboard/notes": {
      "filePath": "_dashboard/notes/route.tsx",
      "parent": "/_dashboard",
      "children": [
        "/_dashboard/notes/",
        "/_dashboard/notes/$noteId"
      ]
    },
    "/_dashboard/settings": {
      "filePath": "_dashboard/settings/route.tsx",
      "parent": "/_dashboard",
      "children": [
        "/_dashboard/settings/",
        "/_dashboard/settings/appearance",
        "/_dashboard/settings/notifications",
        "/_dashboard/settings/profile"
      ]
    },
    "/_dashboard/chat/": {
      "filePath": "_dashboard/chat/index/route.tsx",
      "parent": "/_dashboard/chat"
    },
    "/_dashboard/notes/": {
      "filePath": "_dashboard/notes/index/route.tsx",
      "parent": "/_dashboard/notes"
    },
    "/_dashboard/settings/": {
      "filePath": "_dashboard/settings/index/route.tsx",
      "parent": "/_dashboard/settings"
    },
    "/_dashboard/chat/$chatId": {
      "filePath": "_dashboard/chat/$chatId/route.tsx",
      "parent": "/_dashboard/chat"
    },
    "/_dashboard/notes/$noteId": {
      "filePath": "_dashboard/notes/$noteId/route.tsx",
      "parent": "/_dashboard/notes"
    },
    "/_dashboard/settings/appearance": {
      "filePath": "_dashboard/settings/appearance/route.tsx",
      "parent": "/_dashboard/settings"
    },
    "/_dashboard/settings/notifications": {
      "filePath": "_dashboard/settings/notifications/route.tsx",
      "parent": "/_dashboard/settings"
    },
    "/_dashboard/settings/profile": {
      "filePath": "_dashboard/settings/profile/route.tsx",
      "parent": "/_dashboard/settings"
    }
  }
}
ROUTE_MANIFEST_END */
